# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Opendatasoft
# This file is distributed under the same license as the OpenDataSoft Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# benrict <benoit.richter@opendatasoft.com>, 2018
# Hugo Bost <hugo.bost@opendatasoft.com>, 2018
# Thibaut Dupré <thibaut.dupre@opendatasoft.com>, 2018
# Trad_FR1 <datawords.translator.fr1@gmail.com>, 2018
# Trad_FR2 <datawords.translator.fr2@gmail.com>, 2018
# Rev_FR1 <datawords.proofread.fr1@gmail.com>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenDataSoft Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-02-11 15:49+0100\n"
"PO-Revision-Date: 2018-06-27 09:13+0000\n"
"Last-Translator: Rev_FR1 <datawords.proofread.fr1@gmail.com>, 2018\n"
"Language-Team: French (https://www.transifex.com/opendatasoft/teams/57849/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:2
msgid "Expand JSON array processor"
msgstr "Processeur Déplier le tableau JSON"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:4
msgid ""
"This processor transposes rows containing a JSON array into several rows "
"with a new column containing each value of the array."
msgstr ""
"Ce processeur permet de transposer les lignes contenant un tableau JSON en "
"plusieurs lignes avec une nouvelle colonne contenant chaque valeur du "
"tableau."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:7
msgid "Setting the processor"
msgstr "Configurer le processeur"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:9
msgid ""
"The parameter \"iJSON rule to array\" works exactly like in the \"Extract "
"from JSON\" processor and should contain the array to transpose (represented"
" with the iJSON rule ``.item``)."
msgstr ""
"Le paramètre \"Règle iJSON vers tableau\" fonctionne exactement de la même "
"manière que dans le processeur \"Extraire depuis un objet JSON\" et doit "
"contenir le tableau à transposer (représenté par la règle ``.item``)."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:11
msgid ""
"If the field contains the JSON array directly, just put ``item`` as an iJSON"
" rule."
msgstr ""
"Si le champ contient directement le tableau JSON, ajoutez simplement "
"``.item`` en tant que règle iJSON."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:12
msgid ""
"If the final element is an array, the iJSON rule must end with ``.item``, "
"meaning that the reached object should be treated as an array of items in "
"the iJSON syntax."
msgstr ""
"Si l'élément final est un tableau, la règle iJSON doit se terminer par "
"``.item``, ce qui signifie que l'objet atteint doit toujours être traité "
"comme un tableau d'éléments dans la syntaxe iJSON."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:13
msgid ""
"If you want to keep going into the items inside the array, you can keep "
"adding key names after the ``.item``, but be careful to check that this path"
" is valid for every object in the array."
msgstr ""
"Si vous souhaitez continuer à énumérer les articles dans le tableau, vous "
"pouvez continuer à ajouter des noms de clé après ``.item``. Veillez "
"toutefois à vous assurer que ce chemin d'accès est valide pour chaque objet "
"dans le tableau."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:15
msgid ""
"To set the parameters of the Expand JSON array processor, follow the "
"indications from the table below."
msgstr ""
"Pour définir les paramètres du processeur Déplier le tableau JSON, suivez "
"les indications du tableau ci-dessous."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:20
msgid "Label"
msgstr "Label"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:21
msgid "Description"
msgstr "Description"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:22
#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:34
msgid "Example"
msgstr "Exemple"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:23
msgid "JSON array field"
msgstr "Champ du tableau JSON"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:24
msgid "Name of the field that holds the JSON array"
msgstr "Nom du champ contenant le tableau JSON"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:25
msgid "data"
msgstr "data"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:26
msgid "iJSON rule to array"
msgstr "Règle iJSON vers tableau"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:27
msgid ""
"iJSON rule to iterate in the JSON array above. An iJSON rule is built with "
"the names of all the field from the JSON root to the data to extract, "
"separated with a dot."
msgstr ""
"Règle iJSON à itérer dans le tableau JSON ci-dessus. Une règle iJSON se "
"construit avec les noms de tous les champs de la racine JSON des données à "
"extraire, séparés par des points."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:28
msgid "block.metaB"
msgstr "block.metaB"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:29
msgid "Output field"
msgstr "Champ de sortie"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:30
msgid "Name of the field that will contain the extracted element"
msgstr "Nom du champ qui contiendra l'élément extrait"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:36
msgid "iJSON rules to extract from the following JSON array field:"
msgstr "Règles iJSON à extraire du champ du tableau JSON suivant :"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:53
msgid ""
"``item`` will transpose the record into 2, one with each object of the array"
" in the \"Output field\" column"
msgstr ""
"``item`` transposera l'enregistrement en 2 enregistrements, qui contiennent "
"chaque objet du tableau dans la colonne \"Champ de sortie\""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:74
msgid ""
"``bloc.item`` will transpose the record into 2, one with each object of the "
"array in the \"Output field\" column"
msgstr ""
"``bloc.item`` transposera l'enregistrement en 2 enregistrements, qui "
"contiennent chaque objet du tableau dans la colonne \"Champ de sortie\""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:75
msgid ""
"``bloc.item.sub`` will transpose the record into 2, one with each object "
"inside the \"sub\" tag of each object of the array."
msgstr ""
"``bloc.item.sub`` transposera l'enregistrement en 2 enregistrements, qui "
"contiennent chaque objet à l'intérieur du tag \"sub\" de chaque objet du "
"tableau."
