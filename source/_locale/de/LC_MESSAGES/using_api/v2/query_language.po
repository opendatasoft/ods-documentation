# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, OpenDataSoft
# This file is distributed under the same license as the OpenDataSoft Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenDataSoft Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-05-03 18:00+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Proofread_DE1 <datawords.proofread.de1@gmail.com>, 2017\n"
"Language-Team: German (https://www.transifex.com/opendatasoft/teams/57849/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../source/using_api/v2/query_language.rst:2
msgid "Query Language"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:4
msgid "Filtering features are built in the core of OpenDataSoft API engine."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:6
msgid ""
"The OpenDataSoft Query Language (ODSQL) makes it possible to express complex"
" queries as a filtering context for datasets or records, but also to build "
"aggregations or computed fields."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:8
msgid ""
"Note that a given filtering context can simply be copied from one API to "
"another. For example, you can easily build a user interface which first "
"allows the user to visually select the records they are are interested in, "
"using full text search, facets and geo filtering ; and then allowing them to"
" download these records with the same filtering context."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:13
msgid "Introduction"
msgstr "Einf√ºhrung"

#: ../../source/using_api/v2/query_language.rst:15
msgid "The ODSQL is split into five different kinds of clauses:"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:17
msgid ""
"the **select** clause allows you to choose the returned fields, give them an"
" alias, or manipulate them with functions like count, sum, min, max, etc."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:18
msgid ""
"the **where** clause acts as a filter for the returned datasets or records, "
"thanks to boolean operations, filter functions, arithmetic expressions, and "
"more."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:19
msgid ""
"the **group by** clause lets you aggregate rows together based on fields, "
"numeric ranges, or dates,"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:20
msgid ""
"the **order by** and **limit** clauses let you choose the order and quantity"
" of rows you will receive as a response."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:22
msgid ""
"These clauses are used as parameters in the Search API v2 for searching, "
"aggregating and exporting datasets and records. Depending on the endpoint "
"you use, some features of the query language will be available or not in the"
" request."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:24
msgid ""
"The whole query language is case insensitive but we will use upper case in "
"the documentation for language keywords for clarity. Spaces are optional."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:27
msgid "Language elements"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:30
msgid "Literals"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:32
msgid ""
"Literals are used in comparison, assignments or functions. Literal types are"
" **fields**, **strings**, **numbers**, **date**, **boolean** and "
"**geometry**."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:34
msgid "Here the format for each literal:"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:37
msgid "Field"
msgstr "Feld"

#: ../../source/using_api/v2/query_language.rst:39
msgid ""
"Field literals are literals that are not enclosed in quotes. They contain "
"only alphanumeric characters or underscore."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:41
msgid ""
"**WARNING**: If a field name contains only digits or is a keyword, it must "
"be enclosed in back-quotes"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:50
msgid "String"
msgstr "Zeichenfolge"

#: ../../source/using_api/v2/query_language.rst:52
msgid "String literals are enclosed in either single or double quotes."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:62
msgid "Number"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:71
msgid "Date"
msgstr "Datum"

#: ../../source/using_api/v2/query_language.rst:73
msgid ""
"Date literals are defined with a ``date`` keyword followed by a valid date "
"format enclosed in single quotes."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:82
msgid "Boolean"
msgstr "Boolesch"

#: ../../source/using_api/v2/query_language.rst:84
msgid ""
"Boolean literals should be used in boolean filters and can be either TRUE or"
" FALSE keywords (non case sensitive)"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:93
msgid "Geometry"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:95
msgid ""
"Geometry literals are defined with a ``geom`` keyword followed by a valid "
"geometry expression enclosed in single quotes. Supported geometry expression"
" are :"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:98
msgid "WKT/WKB : https://en.wikipedia.org/wiki/Well-known_text"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:99
msgid "GEOJSON"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:108
msgid "Reserved words"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:110
msgid "All these words must be back-quoted if used as field name."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:151
msgid "Select clause"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:153
msgid ""
"The **select** clause can be used in the whole search API as the parameter "
"``select``. Its goal is to allow you to choose the fields that will be "
"returned for each row, transform them using arithmetic, rename them, add "
"computed virtual fields, include or exclude fields based on a pattern."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:155
msgid "A **select** clause can be:"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:157
#: ../../source/using_api/v2/query_language.rst:188
#: ../../source/using_api/v2/query_language.rst:407
msgid "a single expression"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:158
msgid "a list of comma-separated expressions"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:161
msgid "Select expression"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:170
msgid ""
"These expressions are classic expressions showing multiple selection, field "
"renaming and arithmetic select. The '*' (wildcard) means all the fields (if "
"not in an arithmetic select where it is treated as the multiply sign). It is"
" the default behavior when no select is specified in the search endpoint. In"
" the aggregates endpoint, the default is to only display fields used for the"
" aggregation."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:173
msgid "Include and exclude"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:182
msgid "Where clause"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:184
msgid ""
"The **where** clause can be used in the whole search API as the parameter "
"``where``. Its goal is to filter rows with a combination of boolean "
"expressions, functions, expressions or search queries."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:186
msgid "A **where** clause can be:"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:189
msgid ""
"a list of comma-separated expressions that must all be satisfied at the same"
" time"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:190
msgid "empty"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:193
msgid "Filter functions"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:195
msgid ""
"Filter functions are built-in functions that can be used as a where "
"expression:"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:197
msgid ""
"The **type** function returns rows where the field named *field_name* has "
"some type in ``INT``, ``DOUBLE``, ``TEXT``, ``FILE``, ``DATE``, "
"``DATETIME``, ``IMAGE``."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:203
msgid ""
"The **distance** function limits the result set to a geographical area "
"defined by a circle defined by its center and a distance. The coordinates of"
" the center of the circle are expressed in the `WKT format "
"<https://en.wikipedia.org/wiki/Well-known_text>`_). The distance is numeric "
"and can have a unit in ``mi``, ``yd``, ``ft``, ``m``, ``cm``, ``km``, "
"``mm``."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:211
msgid ""
"The **geometry** function limits the result set to a geographical area "
"defined by a polygon with coordinates expressed in the WKT format, and a "
"mode in ``INTERSECT``, ``DISJOINT``, ``WITHIN``."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:220
msgid ""
"The **bbox** function limits the result set to a rectangular box defined by "
"its top left and its bottom right coordinates expressed in the WKT format."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:228
msgid "Filter expressions"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:230
msgid ""
"Filter expressions allow you to use arithmetic and comparisons to limit the "
"result set to matching rows."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:240
msgid ""
"Filter expressions also work with dates and ranges of dates, as the "
"following examples show."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:249
msgid ""
"As you can see in these examples, the syntax is flexible and you can combine"
" several statements thanks to boolean expressions (``AND``, ``OR``, "
"``NOT``)."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:251
msgid ""
"For text searches, the matched string must be single or double quoted. The "
"keyword \"LIKE\" is used to perform approximate searches, or prefixed "
"searches."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:261
msgid "Text field"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:266
#: ../../source/using_api/v2/query_language.rst:282
#: ../../source/using_api/v2/query_language.rst:299
msgid "Operators"
msgstr "Operatoren"

#: ../../source/using_api/v2/query_language.rst:267
#: ../../source/using_api/v2/query_language.rst:283
#: ../../source/using_api/v2/query_language.rst:300
#: ../../source/using_api/v2/query_language.rst:357
#: ../../source/using_api/v2/query_language.rst:476
msgid "Description"
msgstr "Beschreibung"

#: ../../source/using_api/v2/query_language.rst:268
msgid "``like``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:269
msgid ""
"Perform a normalized query on provided token. Example: ``film_name like "
"\"star\"`` will match ``star wars`` and ``Star Trek`` To match multi tokens,"
" it is possible to use quotes. ``film_name like \"star wars\"`` will match "
"fields containing ``star`` and ``wars``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:271
#: ../../source/using_api/v2/query_language.rst:284
msgid "``:`` , ``=``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:272
msgid ""
"Perform an exact query (not tokenized and not normalized) on the specified "
"field. Example: ``film_name=\"Star\"`` will not match ``Star Wars``. To "
"match ``Star Wars`` it is necessary to query the exact string. "
"``film_name=\"Star Wars\"``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:277
msgid "Numeric field"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:285
msgid ""
"Match a numeric value. For instance: ``age:18`` will filter rows with field "
"``age`` is equal to ``18``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:286
#: ../../source/using_api/v2/query_language.rst:303
msgid "``>``, ``<``, ``>=``, ``<=``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:287
#: ../../source/using_api/v2/query_language.rst:304
msgid ""
"Return results whose field values are larger, smaller, larger or equal, "
"smaller or equal to the given value."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:288
msgid "``[lower_numeric (TO|..) higher_numeric]``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:289
msgid ""
"Queries Records whose numeric value is between ``lower_numeric`` and "
"``higher_numeric``. An inclusive or exclusive bound can be used. Example: "
"``]lower_numeric (TO|..) higher_numeric[`` will exclude ``lower_numeric`` "
"and ``higher_numeric``."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:294
msgid "Date field"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:301
msgid "``:``, ``=``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:302
msgid ""
"Match a date value. For instance: ``film_date:1977`` will return films "
"released in 1977."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:305
msgid "``[lower_date (TO|..) higher_date]``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:306
msgid ""
"Queries Records whose numeric value is between ``lower_date`` and "
"``higher_date``. An inclusive or exclusive bound can be used. Example: "
"``]lower_date (TO|..) higher_date[`` will exclude ``lower_date`` and "
"``higher_date``."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:309
msgid ""
"Date formats can be specified in different formats: simple (YYYY[[/mm]/dd]) "
"or ISO 8601 (YYYY-mm-DDTHH:MM:SS)"
msgstr ""
"Datumsformate k√∂nnen in verschiedenen Formaten angegeben werden: einfach "
"(YYYY[[/mm]/dd]) oder ISO 8601 (YYYY-mm-DDTHH:MM:SS)"

#: ../../source/using_api/v2/query_language.rst:311
msgid "**Examples:**"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:313
msgid "``film_date >= 2002``"
msgstr "``film_date >= 2002``"

#: ../../source/using_api/v2/query_language.rst:314
msgid "``film_date >= 2013/02/11``"
msgstr "``film_date >= 2013/02/11``"

#: ../../source/using_api/v2/query_language.rst:315
msgid "``film_date: [1950 TO 2000]``"
msgstr "``film_date: [1950 TO 2000]``"

#: ../../source/using_api/v2/query_language.rst:316
msgid "``film_box_office > 10000 AND film_date < 1965``"
msgstr "``film_box_office > 10000 AND film_date < 1965``"

#: ../../source/using_api/v2/query_language.rst:319
msgid "Filter search query"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:321
msgid ""
"Filter search queries are queries that don't refer to fields, only "
"containing quoted strings and boolean operators. They perform full-text "
"searches on all visible fields of each record and return matching rows."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:331
msgid ""
"If the string contains more than one word, the query will be an ``AND`` "
"query on each tokenized word."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:338
msgid ""
"It is possible to perform a greedy query by adding a wildcard `*` at the end"
" of a word."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:346
msgid "Field queries"
msgstr "Feld-Abfragen"

#: ../../source/using_api/v2/query_language.rst:348
msgid ""
"One of the major features of the query language is to allow per field "
"filtering. You can use field names as a prefix to your queries to filter the"
" results based on a specific field's value."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:351
msgid ""
"**For the dataset search API**, the list of available fields corresponds "
"exactly to available metadata. By default:"
msgstr ""
"**F√ºr die Datensatz-Such-API** entspricht die Liste der verf√ºgbaren Felder "
"genau den verf√ºgbaren Metadaten. Standard:"

#: ../../source/using_api/v2/query_language.rst:356
msgid "Field Name"
msgstr "Feldname"

#: ../../source/using_api/v2/query_language.rst:358
msgid "publisher"
msgstr "Ver√∂ffentlicher"

#: ../../source/using_api/v2/query_language.rst:359
msgid "The dataset publisher"
msgstr "Der Datensatz-Ver√∂ffentlicher"

#: ../../source/using_api/v2/query_language.rst:360
msgid "title"
msgstr "Titel"

#: ../../source/using_api/v2/query_language.rst:361
msgid "The dataset title"
msgstr "Der Datensatz-Titel"

#: ../../source/using_api/v2/query_language.rst:362
msgid "description"
msgstr "Beschreibung"

#: ../../source/using_api/v2/query_language.rst:363
msgid "The dataset description"
msgstr "Die Datensatz-Beschreibung"

#: ../../source/using_api/v2/query_language.rst:364
msgid "license"
msgstr "Lizenz"

#: ../../source/using_api/v2/query_language.rst:365
msgid "The dataset license"
msgstr "Die Datensatz-Lizenz"

#: ../../source/using_api/v2/query_language.rst:366
msgid "records_count"
msgstr "records_count"

#: ../../source/using_api/v2/query_language.rst:367
msgid "The number of records in the dataset"
msgstr "Die Anzahl der Eintr√§ge im Datensatz"

#: ../../source/using_api/v2/query_language.rst:368
msgid "modified"
msgstr "ge√§ndert"

#: ../../source/using_api/v2/query_language.rst:369
msgid "The last modification date of the dataset"
msgstr "Das Datum der letzten √Ñnderung des Datensatzes"

#: ../../source/using_api/v2/query_language.rst:370
msgid "language"
msgstr "Sprache"

#: ../../source/using_api/v2/query_language.rst:371
msgid "The language of the dataset (iso code)"
msgstr "Die Sprache des Datensatzes (ISO-Code)"

#: ../../source/using_api/v2/query_language.rst:372
msgid "theme"
msgstr "theme"

#: ../../source/using_api/v2/query_language.rst:373
msgid "The theme of the dataset"
msgstr "Das Thema des Datensatzes"

#: ../../source/using_api/v2/query_language.rst:374
msgid "references"
msgstr "Referenzen"

#: ../../source/using_api/v2/query_language.rst:375
msgid "The references for the dataset"
msgstr "Die Referenzen f√ºr den Datensatz"

#: ../../source/using_api/v2/query_language.rst:377
msgid ""
"The domain administrator might define a richer metadata template, thus "
"giving access to a richer set of filtering fields."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:379
msgid ""
"For example, one can search on public.opendatasoft.com datasets which have "
"``Paris`` in their title or description and which contain at least 50 000 "
"records:"
msgstr ""
"Beispielsweise sucht jemand auf public.opendatasoft.com Datens√§tze, die "
"\"Paris\" in ihrem Titel bzw. ihrer Beschreibung sowie mindestens 50.000 "
"Eintr√§ge enthalten:"

#: ../../source/using_api/v2/query_language.rst:387
msgid ""
"**For the record search APIs**, the list of available fields depends on the "
"schema of the dataset. To fetch the list of available fields for a given "
"dataset, you may use the search dataset or lookup dataset APIs."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:390
msgid ""
"For example one can search in the dataset containing the history of the "
"SuperBowl, the ones that happened in a stadium called \"Bowl\"."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:397
msgid ""
"Multiple operator fields can be used between the field name and the query "
"depending of the type."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:401
msgid "Group by clause"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:403
msgid ""
"The **group by** clause can be used in the whole search API as the parameter"
" ``group_by``. It enables you to group a set of rows together by field "
"value, or by numeric or date range."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:405
msgid "A **group by** clause can be:"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:408
msgid ""
"a list of comma-separated expressions. Like selects, group by expressions "
"can have an ``AS`` statement to give them a label"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:411
msgid "Static range"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:413
msgid ""
"The static range function takes two parameters: a field name and an array of"
" steps inside brackets. The side of brackets determines if values lower than"
" the lower bound and higher than the higher bound should be grouped together"
" or ignored."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:419
msgid ""
"This statement will create 4 buckets: ``*-10``, ``10-50``, ``50-100`` and "
"``100-*``."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:425
msgid "This statement will create one bucket: ``20.5-*``."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:431
msgid "This statement will create two buckets: ``1-2`` and ``2-3``."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:434
msgid "Equi range"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:436
msgid ""
"The equi range function takes four parameters: a field name, a step value, a"
" lower bound and an higher bound."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:442
msgid "This statement will create the following buckets:"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:444
msgid "``*-10``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:445
msgid "``10-15``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:446
msgid "``15-20``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:447
msgid "``20-25``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:448
msgid "``25-30``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:449
msgid "``30-*``"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:452
msgid "Order by clause"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:454
msgid ""
"The order by (``order_by`` parameter) lets you choose how the results of "
"your query will be sorted. It takes a list of field names, each of which "
"have an optional ``ASC`` or ``DESC`` option to choose between ascending and "
"descending order (default is ascending)."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:460
msgid ""
"This statement will order the results by population (ascending), and results"
" with the same population by descending GDP."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:463
msgid "Limit clause"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:465
msgid ""
"The limit clause (``limit`` parameter) is very straightforward. It is "
"maximum number of rows you want to receive in the result of your query. The "
"default limit is 10 records, and most of the requests except exports have a "
"maximum limit of 10 000 records."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:468
msgid "Query language functions"
msgstr "Funktionen der Abfragesprachen"

#: ../../source/using_api/v2/query_language.rst:470
msgid "Advanced functions can be used in the query language."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:475
msgid "Function name"
msgstr "Funktionsname"

#: ../../source/using_api/v2/query_language.rst:477
msgid "now"
msgstr "Jetzt"

#: ../../source/using_api/v2/query_language.rst:478
msgid ""
"Returns the current date. This function may be called as a query value for a"
" field. When called without an argument, it will evaluate to the current "
"datetime: ``birthdate >= NOW()`` returns all Records containing a birth date"
" greater or equal to the current datetime. This function can also accept "
"parameters, see below for the ``NOW()`` function available parameters."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:483
msgid "Available parameters for the ``NOW()`` function:"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:485
msgid ""
"years, months, weeks, days, hours, minutes, seconds, microseconds: These "
"parameters add time to the current date."
msgstr ""
"Jahre, Monate, Wochen, Tage, Stunden, Minuten, Sekunden, Mikrosekunden: "
"Diese Parameter erg√§nzen das aktuelle Datum um die Uhrzeit."

#: ../../source/using_api/v2/query_language.rst:487
msgid ""
"For example: ``NOW(years=-1, hours=-1)`` returns the current date minus a "
"year and an hour"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:489
msgid ""
"year, month, day, hour, minute, second, microsecond: can also be used to "
"specify an absolute date."
msgstr ""
"Jahr, Monat, Tag, Stunde, Minute, Sekunde, Mikrosekunde: Diese Parameter "
"k√∂nnen auch zur Angabe eines absoluten Datums verwendet werden."

#: ../../source/using_api/v2/query_language.rst:491
msgid ""
"For example: ``NOW(year=2001)`` returns the current time, day and month for "
"year 2001"
msgstr ""

#: ../../source/using_api/v2/query_language.rst:493
msgid ""
"weekday: Specifies a day of the week. This parameter accepts either an "
"integer between 0 and 6 (where 0 is Monday and 6 is Sunday) or the first two"
" letters of the day (in English) followed by the cardinal of the first week "
"on which to start the query."
msgstr ""
"weekday: Gibt einen Wochentag an. Dieser Parameter akzeptiert entweder eine "
"Ganzzahl zwischen 0 und 6 (wobei Montag 0 und Sonntag 6 ist) oder die ersten"
" beiden Buchstaben des entsprechenden Tages (auf Englisch), gefolgt von der "
"Kardinalzahl der ersten Woche, an der die Suche beginnen soll."

#: ../../source/using_api/v2/query_language.rst:497
msgid "``NOW(weeks=-2, weekday=1)`` returns the Tuesday before last."
msgstr ""

#: ../../source/using_api/v2/query_language.rst:499
msgid "``NOW(weekday=MO(2))`` returns Monday after next."
msgstr ""
