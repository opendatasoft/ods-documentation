# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Opendatasoft
# This file is distributed under the same license as the OpenDataSoft Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# traducteur_DE1 <datawords.translator.de1@gmail.com>, 2018
# Heiko Schlombach <heiko.schlombach@wanadoo.fr>, 2018
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenDataSoft Documentation 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-01 17:12+0100\n"
"PO-Revision-Date: 2018-06-27 09:13+0000\n"
"Last-Translator: Heiko Schlombach <heiko.schlombach@wanadoo.fr>, 2018\n"
"Language-Team: German (https://www.transifex.com/opendatasoft/teams/57849/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:2
msgid "Expand JSON array processor"
msgstr "Prozessor \"JSON-Array erweitern\""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:4
msgid ""
"This processor transposes rows containing a JSON array into several rows "
"with a new column containing each value of the array."
msgstr ""
"Dieser Prozessor wandelt Zeilen mit einem JSON-Array in mehrere Zeilen mit "
"einer neuen Spalte um, die jeden Wert des Arrays enthält."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:7
msgid "Setting the processor"
msgstr "Den Prozessor einrichten"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:9
msgid ""
"The parameter \"iJSON rule to array\" works exactly like in the \"Extract "
"from JSON\" processor and should contain the array to transpose (represented"
" with the iJSON rule ``.item``)."
msgstr ""
"Der Parameter \"iJSON-Regel zu Array\" funktioniert genau wie der Prozessor "
"\"Extrahieren von JSON\" und sollte das umzuwandelnde Array beinhalten "
"(dargestellt mit der iJSON-Regel \".item\")."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:11
msgid ""
"If the field contains the JSON array directly, just put ``item`` as an iJSON"
" rule."
msgstr ""
"Wenn das Feld das JSON-Array direkt enthält, setzen Sie einfach \"item\" als"
" iJSON-Regel."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:12
msgid ""
"If the final element is an array, the iJSON rule must end with ``.item``, "
"meaning that the reached object should be treated as an array of items in "
"the iJSON syntax."
msgstr ""
"Ist das endgültige Element ein Array, muss die iJSON-Regel mit \".item\" "
"enden, d. h. das erreichte Objekt muss wie ein Array von Elementen in der "
"iJSON-Syntax behandelt werden."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:13
msgid ""
"If you want to keep going into the items inside the array, you can keep "
"adding key names after the ``.item``, but be careful to check that this path"
" is valid for every object in the array."
msgstr ""
"Wenn Sie an den Items innerhalb des Arrays interessiert sind, können Sie "
"nach dem \".item\" Schlüsselnamen hinzufügen, achten Sie jedoch darauf, dass"
" der Pfad für jedes Objekt im Array gültig ist."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:15
msgid ""
"To set the parameters of the Expand JSON array processor, follow the "
"indications from the table below."
msgstr ""
"Befolgen Sie die Anweisungen der unteren Tabelle, um die Parameter des "
"Prozessors \"JSON-Array erweitern\" einzurichten."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:20
msgid "Label"
msgstr "Beschriftung"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:21
msgid "Description"
msgstr "Beschreibung"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:22
#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:34
msgid "Example"
msgstr "Beispiel"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:23
msgid "JSON array field"
msgstr "JSON-Array-Feld"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:24
msgid "Name of the field that holds the JSON array"
msgstr "Name des Feldes, das das JSON-Array enthält"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:25
msgid "data"
msgstr "Daten"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:26
msgid "iJSON rule to array"
msgstr "iJSON-Regel nach Array"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:27
msgid ""
"iJSON rule to iterate in the JSON array above. An iJSON rule is built with "
"the names of all the field from the JSON root to the data to extract, "
"separated with a dot."
msgstr ""
"iJSON-Regel, um im oben genannten JSON-Array zu iterieren. Eine iJSON-Regel "
"wird mit den Namen des gesamten Feldes aus dem JSON-Root für die zu "
"extrahierenden Daten aufgebaut (getrennt mit einem Punkt)."

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:28
msgid "block.metaB"
msgstr "block.metaB"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:29
msgid "Output field"
msgstr "Ausgabefeld"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:30
msgid "Name of the field that will contain the extracted element"
msgstr "Name des Feldes, das das extrahierte Element enthalten wird"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:36
msgid "iJSON rules to extract from the following JSON array field:"
msgstr "iJSON-Regeln, um aus dem folgenden JSON-Array-Feld zu extrahieren:"

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:53
msgid ""
"``item`` will transpose the record into 2, one with each object of the array"
" in the \"Output field\" column"
msgstr ""
"\"item\" wird den Eintrag in zwei Einträge umwandeln, einen mit jedem Objekt"
" des Arrays in der Spalte \"Ausgabefeld\""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:74
msgid ""
"``bloc.item`` will transpose the record into 2, one with each object of the "
"array in the \"Output field\" column"
msgstr ""
"\"bloc.item\" wird den Eintrag in zwei Einträge umwandeln, einen mit jedem "
"Objekt des Arrays in der Spalte \"Ausgabefeld\""

#: ../../source/publishing_data/05_processing_data/processors/expand_json_array.rst:75
msgid ""
"``bloc.item.sub`` will transpose the record into 2, one with each object "
"inside the \"sub\" tag of each object of the array."
msgstr ""
"\"bloc.item.sub\" wird den Eintrag in zwei Einträge umwandeln, einen mit "
"jedem Objekt im \"Sub-Tag\" jedes Objektes des Arrays."
